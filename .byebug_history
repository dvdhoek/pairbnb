c
params
c
params
c
@user
n
@user
n
@user
n
params
c
params
c
params
c
params[:newval]
@user
n
c
params[:userid]
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
userid
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params.first
params[:mystring]
JSON.parse(mystring)
params
newval
c
params
c
paramtest
paramstest
params
c
paramsvalue
params.first.first
JSON.parse(params.first)
params.first
params
c
params
newval
c
params
paramsvalue
c
params
paramsvalue
c
params
paramsvalue
c
params.first("cinput")
params.first["cinput"]
params.first
params[0]
params.length
params[\"newval"\]
params["newval"]
params["newval"]]
params[:controller]
params
JSON.parse(params)
JSON(params)
params.JSON.parse
params.parse
params[:controller]
JSON.parse(params.to_s)
JSON.parse
params.controller
params
JSON.parse(params)
JSON.parse(rubyvar)
params
c
params
params.cinput
params[:cinput]
params
c
params
params.elink
params
c
data
json
params
c
params[:elink]c
params[:elinijiojk]
params[:elink]
elink
elink\
params
c
method
params
c
nc
n
params
c
params
c
params
c
params
c
params
paras
c
params
c
params
-params
c
params
c
elink
params
c
params
c
elink
params[:data]
params.data
newval
params
c
params
c
params
c
params
c
params
c
cinput
var all
var
c
@user = User.find(params[:id])
params
c
auth_hash
exit
name.first_name
name
auth_hash
exit
eixt
auth_hash
c
auth_hash['info']['name']
auth_hash['info']['first_name']
auth_hash
c
auth_hash
c
auth_hash
c
auth_hash
c
auth_hash
c
auth_hash
c
c\
auth_hash
c
auth_hash
c
auth_hash
auth_hash['extra']
u.first_name
u.password
n
u.password
u.email
n
auth_hash
c
auth_hash
c
auth_hash
c
auth_hash
auto_hash
c
Authentication.all
c
n
auth_hash
n
Authentication.all
params
auth_hash
n
c
@r.save
@r
n
c
@end_date.class
@end_date
@end_Date
@start_date
@r
n
@start_date
@end_date
c
@end_date
@r
@r.update(end_date: @end_date)
@r.end_date
@r
@r.save
@r
@r.end_date = "jiojop"
@r
@r.end_date = @end_date
@end_date
@r
